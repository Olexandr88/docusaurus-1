"use strict";(self.webpackChunkwechaty_docusaurus=self.webpackChunkwechaty_docusaurus||[]).push([[6491],{15680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>d});var o=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=o.createContext({}),p=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return o.createElement(s.Provider,{value:n},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(t),u=a,d=m["".concat(s,".").concat(u)]||m[u]||g[u]||r;return t?o.createElement(d,i(i({ref:n},c),{},{components:t})):o.createElement(d,i({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[m]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<r;p++)i[p]=t[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},19365:(e,n,t)=>{t.d(n,{A:()=>i});var o=t(96540),a=t(20053);const r={tabItem:"tabItem_Ymn6"};function i(e){let{children:n,hidden:t,className:i}=e;return o.createElement("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,i),hidden:t},n)}},11470:(e,n,t)=>{t.d(n,{A:()=>N});var o=t(58168),a=t(96540),r=t(20053),i=t(23104),l=t(56347),s=t(57485),p=t(31682),c=t(89466);function m(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:o,default:a}}=e;return{value:n,label:t,attributes:o,default:a}}))}function g(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??m(t);return function(e){const n=(0,p.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function u(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function d(e){let{queryString:n=!1,groupId:t}=e;const o=(0,l.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,s.aZ)(r),(0,a.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(o.location.search);n.set(r,e),o.replace({...o.location,search:n.toString()})}),[r,o])]}function y(e){const{defaultValue:n,queryString:t=!1,groupId:o}=e,r=g(e),[i,l]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!u({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const o=t.find((e=>e.default))??t[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:r}))),[s,p]=d({queryString:t,groupId:o}),[m,y]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[o,r]=(0,c.Dv)(t);return[o,(0,a.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:o}),h=(()=>{const e=s??m;return u({value:e,tabValues:r})?e:null})();(0,a.useLayoutEffect)((()=>{h&&l(h)}),[h]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!u({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),p(e),y(e)}),[p,y,r]),tabValues:r}}var h=t(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:n,block:t,selectedValue:l,selectValue:s,tabValues:p}=e;const c=[],{blockElementScrollPositionUntilNextRender:m}=(0,i.a_)(),g=e=>{const n=e.currentTarget,t=c.indexOf(n),o=p[t].value;o!==l&&(m(n),s(o))},u=e=>{let n=null;switch(e.key){case"Enter":g(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n)},p.map((e=>{let{value:n,label:t,attributes:i}=e;return a.createElement("li",(0,o.A)({role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,key:n,ref:e=>c.push(e),onKeyDown:u,onClick:g},i,{className:(0,r.A)("tabs__item",f.tabItem,i?.className,{"tabs__item--active":l===n})}),t??n)})))}function w(e){let{lazy:n,children:t,selectedValue:o}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===o));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},r.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==o}))))}function v(e){const n=y(e);return a.createElement("div",{className:(0,r.A)("tabs-container",f.tabList)},a.createElement(b,(0,o.A)({},e,n)),a.createElement(w,(0,o.A)({},e,n)))}function N(e){const n=(0,h.A)();return a.createElement(v,(0,o.A)({key:String(n)},e))}},83712:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>p,toc:()=>m});var o=t(58168),a=(t(96540),t(15680)),r=t(11470),i=t(19365);const l={title:"Room Bot"},s=void 0,p={unversionedId:"examples/advanced/room-bot",id:"examples/advanced/room-bot",title:"Room Bot",description:"Powered by Wechaty",source:"@site/docs/examples/advanced/room-bot.mdx",sourceDirName:"examples/advanced",slug:"/examples/advanced/room-bot",permalink:"/zh/docs/examples/advanced/room-bot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/examples/advanced/room-bot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan (\u674e\u5353\u6853)",lastUpdatedAt:1631790719,formattedLastUpdatedAt:"2021\u5e749\u670816\u65e5",frontMatter:{title:"Room Bot"},sidebar:"docs",previous:{title:"Media File Bot",permalink:"/zh/docs/examples/advanced/media-file-bot"},next:{title:"Friend Bot",permalink:"/zh/docs/examples/advanced/friend-bot"}},c={},m=[{value:"Try out the bot",id:"try-out-the-bot",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"1. Clone the repository",id:"1-clone-the-repository",level:3},{value:"2. Install dependencies",id:"2-install-dependencies",level:3},{value:"3. Run the bot",id:"3-run-the-bot",level:3},{value:"Building the bot",id:"building-the-bot",level:2},{value:"1. Initializse project",id:"1-initializse-project",level:3},{value:"2. Install dependencies",id:"2-install-dependencies-1",level:3},{value:"3. Writing code for the bot",id:"3-writing-code-for-the-bot",level:3},{value:"4. Running the bot",id:"4-running-the-bot",level:3},{value:"References",id:"references",level:2}],g={toc:m},u="wrapper";function d(e){let{components:n,...t}=e;return(0,a.yg)(u,(0,o.A)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://github.com/Wechaty/wechaty"},(0,a.yg)("img",{parentName:"a",src:"https://img.shields.io/badge/Powered%20By-Wechaty-brightgreen.svg",alt:"Powered by Wechaty"})),"\n",(0,a.yg)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript"},(0,a.yg)("img",{parentName:"a",src:"https://img.shields.io/badge/%3C%2F%3E-JavaScript-blue.svg",alt:"JavaScript"}))),(0,a.yg)("p",null,"Room bot is a practical example which illustrates how to do room handling. With room bot you can do the following:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Find a room"),(0,a.yg)("li",{parentName:"ul"},"Add people to the room"),(0,a.yg)("li",{parentName:"ul"},"Delete people from the room"),(0,a.yg)("li",{parentName:"ul"},"Change the room topic"),(0,a.yg)("li",{parentName:"ul"},"Monitor room events")),(0,a.yg)("h2",{id:"try-out-the-bot"},"Try out the bot"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://codesandbox.io/s/github/sbis04/wechaty-room-bot/tree/main/?fontsize=12&hidenavigation=1&module=%2Froom-bot.js&theme=dark"},(0,a.yg)("img",{parentName:"a",src:"https://codesandbox.io/static/img/play-codesandbox.svg",alt:"Edit wechaty-room-bot"}))),(0,a.yg)("p",null,"You can try out the ",(0,a.yg)("strong",{parentName:"p"},"Wechaty Room bot")," using this interactive CodeSandbox."),(0,a.yg)("p",null,"There is a ",(0,a.yg)("inlineCode",{parentName:"p"},"TODO")," where you have to specify one of your friends' name (the CodeSandbox can be edited by using the above button). After that just scan the generated QR code with the ",(0,a.yg)("strong",{parentName:"p"},"WeChat")," app, and you are ready to play with the bot!"),(0,a.yg)("iframe",{class:"codesandbox",src:"https://codesandbox.io/embed/github/sbis04/wechaty-room-bot/tree/main/?fontsize=12&hidenavigation=1&module=%2Froom-bot.js&theme=dark",sandbox:"allow-modals allow-forms allow-popups allow-scripts allow-same-origin"}),(0,a.yg)("h2",{id:"requirements"},"Requirements"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("a",{parentName:"li",href:"https://nodejs.dev/"},"Node.js")," v16+"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("a",{parentName:"li",href:"https://wechaty.js.org/docs/puppet-services/"},"Wechaty Puppet Service TOKEN")," (if you want to use RPA protocols other than Web)")),(0,a.yg)("h2",{id:"getting-started"},"Getting Started"),(0,a.yg)("p",null,"Before getting started make sure you have ",(0,a.yg)("inlineCode",{parentName:"p"},"Node.js")," installed on your system. If you do not have ",(0,a.yg)("inlineCode",{parentName:"p"},"Node.js")," installed (or have a version below 12),\nthen you need to install the latest version of ",(0,a.yg)("inlineCode",{parentName:"p"},"Node.js")," by following the links below:"),(0,a.yg)("admonition",{title:"Node.js installation docs",type:"note"},(0,a.yg)("ul",{parentName:"admonition"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://nodejs.org/en/download/package-manager/#windows"},"Windows")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions"},"Linux","(","Debian/Ubuntu",")")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://nodejs.org/en/download/package-manager/#macos"},"macOS"))),(0,a.yg)("blockquote",{parentName:"admonition"},(0,a.yg)("p",{parentName:"blockquote"},"Installation guide for ",(0,a.yg)("inlineCode",{parentName:"p"},"Node.js")," in other platforms can be found ",(0,a.yg)("a",{parentName:"p",href:"https://nodejs.org/en/download/package-manager/"},"here"),"."))),(0,a.yg)("p",null,"You can head over to ",(0,a.yg)("a",{parentName:"p",href:"#building-the-bot"},"Building the bot")," section to learn how to build the bot on your own."),(0,a.yg)("p",null,"Otherwise if you want to try out the bot on your local system, follow the steps below:"),(0,a.yg)("h3",{id:"1-clone-the-repository"},"1. Clone the repository"),(0,a.yg)("p",null,"Use the following command to clone the ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/wechaty/wechaty-getting-started"},"Github repository")," and navigate to the directory."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/wechaty/wechaty-getting-started.git\ncd wechaty-getting-started\n")),(0,a.yg)("h3",{id:"2-install-dependencies"},"2. Install dependencies"),(0,a.yg)("p",null,"Install the ",(0,a.yg)("inlineCode",{parentName:"p"},"npm")," packages required for running the bot using the following command:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"npm install\n")),(0,a.yg)("h3",{id:"3-run-the-bot"},"3. Run the bot"),(0,a.yg)("p",null,"You have to export/set environment variables."),(0,a.yg)(r.A,{groupId:"operating-systems",defaultValue:"linux",values:[{label:"Linux",value:"linux"},{label:"macOS",value:"mac"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},(0,a.yg)(i.A,{value:"linux",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"export WECHATY_LOG=verbose\nexport WECHATY_PUPPET=wechaty-puppet-wechat\n"))),(0,a.yg)(i.A,{value:"mac",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"export WECHATY_LOG=verbose\nexport WECHATY_PUPPET=wechaty-puppet-wechat\n"))),(0,a.yg)(i.A,{value:"windows",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"set WECHATY_LOG=verbose\nset WECHATY_PUPPET=wechaty-puppet-wechat\n")))),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},"There are various Wechaty puppets available, you can know more about them ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/wechaty/wechaty-getting-started#working-with-different-puppets"},"here"))),(0,a.yg)("p",null,"For running the bot, use the following command:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"npx ts-node examples/advanced/room-bot.js\n")),(0,a.yg)("p",null,"This will generate a QR code. Scan it using ",(0,a.yg)("strong",{parentName:"p"},"Wechat/Whatsapp")," and you are ready to go."),(0,a.yg)("h2",{id:"building-the-bot"},"Building the bot"),(0,a.yg)("p",null,"Let's get started with building ",(0,a.yg)("strong",{parentName:"p"},"room-bot")," using Wechaty."),(0,a.yg)("h3",{id:"1-initializse-project"},"1. Initializse project"),(0,a.yg)("p",null,"Create a new folder called ",(0,a.yg)("inlineCode",{parentName:"p"},"room-bot")," and move into that directory."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"mkdir room-bot\ncd room-bot\n")),(0,a.yg)("p",null,"Use the following command to initialize an npm project"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"npm init -y\n")),(0,a.yg)("h3",{id:"2-install-dependencies-1"},"2. Install dependencies"),(0,a.yg)("p",null,"For building the room bot, you will require these dependencies:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.npmjs.com/package/wechaty"},"wechaty"),": Official Wechaty package"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.npmjs.com/package/qrcode-terminal"},"qrcode-terminal"),": Displays the QR code")),(0,a.yg)("p",null,"For installing these dependencies run the following commands:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"For installing wechaty"))),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"npm install wechaty\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"For installing qrcode-terminal"))),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"npm install qrcode-terminal\n")),(0,a.yg)("p",null,"You will also need to add dependencies for using any ",(0,a.yg)("a",{parentName:"p",href:"https://wechaty.js.org/docs/puppet-providers/"},"Wechaty Puppet")," which helps to integrate Wechaty with various ",(0,a.yg)("strong",{parentName:"p"},"instant messaging (IM) systems")," (such as WeChat, WhatsApp, and WeCom):"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"If you want to use ",(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("a",{parentName:"strong",href:"https://www.whatsapp.com/"},"WhatsApp")),", install ",(0,a.yg)("inlineCode",{parentName:"p"},"wechaty-puppet-whatsapp"),":"),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"npm install wechaty-puppet-whatsapp\n"))),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"If you want to use ",(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("a",{parentName:"strong",href:"https://www.wechat.com/"},"WeChat")),", you can try the following puppets:"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Web Protocol:")," Install ",(0,a.yg)("inlineCode",{parentName:"p"},"wechaty-puppet-wechat"),":"),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"npm install wechaty-puppet-wechat\n"))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"iPad Protocol:")),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"padlocal: Install ",(0,a.yg)("inlineCode",{parentName:"p"},"wechaty-puppet-padlocal"),":"),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"npm install wechaty-puppet-padlocal\n")),(0,a.yg)("p",{parentName:"li"},"Then get a token like ",(0,a.yg)("inlineCode",{parentName:"p"},"puppet_padlocal_XXX"),", know more about puppet service padlocal ",(0,a.yg)("a",{parentName:"p",href:"http://wechaty.js.org/docs/puppet-services/padlocal"},"here"),".")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"paimon: Install ",(0,a.yg)("inlineCode",{parentName:"p"},"wechaty-puppet-service"),":"),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"npm install wechaty-puppet-service\n")),(0,a.yg)("p",{parentName:"li"},"Then get a token like ",(0,a.yg)("inlineCode",{parentName:"p"},"puppet_paimon_XXX"),", know more about puppet service paimon ",(0,a.yg)("a",{parentName:"p",href:"http://wechaty.js.org/docs/puppet-services/paimon"},"here"),".")))))),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"If you want to use ",(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("a",{parentName:"strong",href:"https://work.weixin.qq.com/"},"WeCom")),", install ",(0,a.yg)("inlineCode",{parentName:"p"},"wechaty-puppet-service"),":"),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"npm install wechaty-puppet-service\n")),(0,a.yg)("p",{parentName:"li"},"Then get a token like ",(0,a.yg)("inlineCode",{parentName:"p"},"puppet_wxwork_XXXXX"),", more about puppet service wxwork ",(0,a.yg)("a",{parentName:"p",href:"https://wechaty.js.org/docs/puppet-services/wxwork/"},"here"),"."))),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},"You can find more information about the puppets ",(0,a.yg)("a",{parentName:"p",href:"https://wechaty.js.org/docs/puppet-providers/"},"here"),".")),(0,a.yg)("p",null,"Now, you are ready to write the main code for the bot."),(0,a.yg)("h3",{id:"3-writing-code-for-the-bot"},"3. Writing code for the bot"),(0,a.yg)("p",null,"Create a new file ",(0,a.yg)("inlineCode",{parentName:"p"},"room-bot.js"),". You will be writing code here."),(0,a.yg)("p",null,"Let's import required packages in ",(0,a.yg)("inlineCode",{parentName:"p"},"room-bot.js")," file and create a ",(0,a.yg)("inlineCode",{parentName:"p"},"HELPER_CONTACT_NAME")," variable which will be used to create a room."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"// TODO: Put the name of one of your friend here,\n// or room create function will not work.\nconst HELPER_CONTACT_NAME = \"huan\";\n\nimport qrTerm  from 'qrcode-terminal';\n\nimport { Wechaty, log }  from 'wechaty';\n")),(0,a.yg)("p",null,"Now, we will write some functions which will be required for handling different events returned by bot."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"manageDingRoom")),(0,a.yg)("p",null,"This function will help you find a room, join it, leave it, and change the topic of the room."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'async function manageDingRoom() {\n  log.info("Bot", "manageDingRoom()");\n\n  /**\n   * Find Room\n   */\n  try {\n    const room = await bot.Room.find({ topic: /^ding/i });\n    if (!room) {\n      log.warn("Bot", "there is no room topic ding(yet)");\n      return;\n    }\n    log.info("Bot", \'start monitor "ding" room join/leave/topic event\');\n\n    /**\n     * Event: Join\n     */\n    room.on("join", function (inviteeList, inviter) {\n      log.verbose(\n        "Bot",\n        \'Room EVENT: join - "%s", "%s"\',\n        inviteeList.map((c) => c.name()).join(", "),\n        inviter.name()\n      );\n      console.log("room.on(join) id:", this.id);\n      checkRoomJoin.call(this, room, inviteeList, inviter);\n    });\n\n    /**\n     * Event: Leave\n     */\n    room.on("leave", (leaverList, remover) => {\n      log.info(\n        "Bot",\n        \'Room EVENT: leave - "%s" leave(remover "%s"), byebye\',\n        leaverList.join(","),\n        remover || "unknown"\n      );\n    });\n\n    /**\n     * Event: Topic Change\n     */\n    room.on("topic", (topic, oldTopic, changer) => {\n      log.info(\n        "Bot",\n        \'Room EVENT: topic - changed from "%s" to "%s" by member "%s"\',\n        oldTopic,\n        topic,\n        changer.name()\n      );\n    });\n  } catch (e) {\n    log.warn("Bot", \'Room.find rejected: "%s"\', e.stack);\n  }\n}\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"checkRoomJoin")),(0,a.yg)("p",null,"This function checks who can send an invitation and who can't. If the invitation is sent by the owner, then the person could join the room. Otherwise, the invitation will be canceled and the person has to resend ding to the owner so that the owner can send him/her a new valid invitation."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'async function checkRoomJoin(room, inviteeList, inviter) {\n  log.info(\n    "Bot",\n    \'checkRoomJoin("%s", "%s", "%s")\',\n    await room.topic(),\n    inviteeList.map((c) => c.name()).join(","),\n    inviter.name()\n  );\n\n  try {\n    // let to, content\n    const userSelf = bot.userSelf();\n\n    if (inviter.id !== userSelf.id) {\n      await room.say(\n        "RULE1: Invitation is limited to me, the owner only. Please do not invite people without notifying me.",\n        inviter\n      );\n      await room.say(\n        \'Please contact me: by send "ding" to me, I will re-send you an invitation. Now I will remove you out, sorry.\',\n        inviteeList\n      );\n\n      await room.topic("ding - warn " + inviter.name());\n      setTimeout((_) => inviteeList.forEach((c) => room.del(c)), 10 * 1000);\n    } else {\n      await room.say("Welcome to my room! :)");\n\n      let welcomeTopic;\n      welcomeTopic = inviteeList.map((c) => c.name()).join(", ");\n      await room.topic("ding - welcome " + welcomeTopic);\n    }\n  } catch (e) {\n    log.error("Bot", "checkRoomJoin() exception: %s", e.stack);\n  }\n}\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"putInRoom")),(0,a.yg)("p",null,"This function adds people to the room."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'async function putInRoom(contact, room) {\n  log.info("Bot", \'putInRoom("%s", "%s")\', contact.name(), await room.topic());\n\n  try {\n    await room.add(contact);\n    setTimeout((_) => room.say("Welcome ", contact), 10 * 1000);\n  } catch (e) {\n    log.error("Bot", "putInRoom() exception: " + e.stack);\n  }\n}\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"getOutRoom")),(0,a.yg)("p",null,"This function removes people from room, if they said ",(0,a.yg)("inlineCode",{parentName:"p"},"ding")," inside a room."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'async function getOutRoom(contact, room) {\n  log.info("Bot", \'getOutRoom("%s", "%s")\', contact, room);\n\n  try {\n    await room.say(\'You said "ding" in my room, I will remove you out.\');\n    await room.del(contact);\n  } catch (e) {\n    log.error("Bot", "getOutRoom() exception: " + e.stack);\n  }\n}\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"getHelperContact")),(0,a.yg)("p",null,"This function returns a ",(0,a.yg)("em",{parentName:"p"},"Helper contact")," that you defined in the beginning."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'function getHelperContact() {\n  log.info("Bot", "getHelperContact()");\n\n  // create a new room at least need 3 contacts\n  return bot.Contact.find({ name: HELPER_CONTACT_NAME });\n}\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"createDingRoom")),(0,a.yg)("p",null,"This function is used to create a room but if ",(0,a.yg)("em",{parentName:"p"},"Helper contact")," is not found, then it asks you to set it first."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'async function createDingRoom(contact) {\n  log.info("Bot", \'createDingRoom("%s")\', contact);\n\n  try {\n    const helperContact = await getHelperContact();\n\n    if (!helperContact) {\n      log.warn("Bot", "getHelperContact() found nobody");\n      await contact.say(`You don\'t have a friend called "${HELPER_CONTACT_NAME}",\n                         because create a new room at least need 3 contacts, please set [HELPER_CONTACT_NAME] in the code first!`);\n      return;\n    }\n\n    log.info("Bot", \'getHelperContact() ok. got: "%s"\', helperContact.name());\n\n    const contactList = [contact, helperContact];\n    log.verbose("Bot", \'contactList: "%s"\', contactList.join(","));\n\n    await contact.say(\n      `There isn\'t ding room. I\'m trying to create a room with "${helperContact.name()}" and you`\n    );\n    const room = await bot.Room.create(contactList, "ding");\n    log.info("Bot", \'createDingRoom() new ding room created: "%s"\', room);\n\n    await room.topic("ding - created");\n    await room.say("ding - created");\n\n    return room;\n  } catch (e) {\n    log.error("Bot", "getHelperContact() exception:", e.stack);\n    throw e;\n  }\n}\n')),(0,a.yg)("p",null,"Now initializing the bot by providing the name."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'const bot = new Wechaty({\n  name: "room-bot",\n})\n')),(0,a.yg)("p",null,"Assigning proper functions to call when an event is triggered."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'bot\n  .on("scan", (qrcode, status) => {\n    qrTerm.generate(qrcode, { small: true });\n    console.log(`${qrcode}\\n[${status}] Scan QR Code in above url to login: `);\n  })\n  .on("logout", (user) => log.info("Bot", `"${user.name()}" logouted`))\n  .on("error", (e) => log.info("Bot", "error: %s", e))\n')),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"When ",(0,a.yg)("inlineCode",{parentName:"li"},"scan")," is triggered, it generates QR code."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"logout")," will display the name of the user along with the status ",(0,a.yg)("inlineCode",{parentName:"li"},"logouted"),"."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"error")," is used to notify if the bot encounters an error.")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Global Event: login")),(0,a.yg)("p",null,"This event gets the ",(0,a.yg)("inlineCode",{parentName:"p"},"user")," and displays the login status of the user. After that, it displays the ",(0,a.yg)("inlineCode",{parentName:"p"},"msg")," saying ",(0,a.yg)("inlineCode",{parentName:"p"},"setting to manageDingRoom() after 3 seconds ... ")," which means it will call ",(0,a.yg)("inlineCode",{parentName:"p"},"manageDingRoom")," function after 3 seconds."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'.on("login", async function (user) {\n    let msg = `${user.name()} logined`;\n\n    log.info("Bot", msg);\n    await this.say(msg);\n\n    msg = `setting to manageDingRoom() after 3 seconds ... `;\n    log.info("Bot", msg);\n    await this.say(msg);\n\n    setTimeout(manageDingRoom.bind(this), 3000);\n  })\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Global Event: room-join")),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"room-join")," event lets people join a respective room."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'.on("room-join", async function (room, inviteeList, inviter) {\n    log.info(\n      "Bot",\n      \'EVENT: room-join - Room "%s" got new member "%s", invited by "%s"\',\n      await room.topic(),\n      inviteeList.map((c) => c.name()).join(","),\n      inviter.name()\n    );\n    console.log("bot room-join room id:", room.id);\n    const topic = await room.topic();\n    await room.say(`welcome to "${topic}"!`, inviteeList[0]);\n  })\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Global Event: room-leave")),(0,a.yg)("p",null,"This event removes people from the room."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'.on("room-leave", async function (room, leaverList) {\n    log.info(\n      "Bot",\n      \'EVENT: room-leave - Room "%s" lost member "%s"\',\n      await room.topic(),\n      leaverList.map((c) => c.name()).join(",")\n    );\n    const topic = await room.topic();\n    const name = leaverList[0] ? leaverList[0].name() : "no contact!";\n    await room.say(`kick off "${name}" from "${topic}"!`);\n  })\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Global Event: room-topic")),(0,a.yg)("p",null,"Using this event, you can change the topic of the room."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'.on("room-topic", async function (room, topic, oldTopic, changer) {\n    try {\n      log.info(\n        "Bot",\n        \'EVENT: room-topic - Room "%s" change topic from "%s" to "%s" by member "%s"\',\n        room,\n        oldTopic,\n        topic,\n        changer\n      );\n      await room.say(\n        `room-topic - change topic from "${oldTopic}" to "${topic}" by member "${changer.name()}"`\n      );\n    } catch (e) {\n      log.error("Bot", "room-topic event exception: %s", e.stack);\n    }\n  })\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Global Event: message")),(0,a.yg)("p",null,"This event handles entry and exit in the room. If you send ",(0,a.yg)("inlineCode",{parentName:"p"},"ding")," the first time, then you will get an invitation but saying ",(0,a.yg)("inlineCode",{parentName:"p"},"ding")," in a room leads to exiting the room. Similarly, if you say ",(0,a.yg)("inlineCode",{parentName:"p"},"dong")," it will quit the room."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'.on("message", async function (msg) {\n    if (msg.age() > 3 * 60) {\n      log.info(\n        "Bot",\n        \'on(message) skip age("%d") > 3 * 60 seconds: "%s"\',\n        msg.age(),\n        msg\n      );\n      return;\n    }\n\n    const room = msg.room();\n    const from = msg.from();\n    const text = msg.text();\n\n    if (!from) {\n      return;\n    }\n\n    console.log(\n      (room ? "[" + (await room.topic()) + "]" : "") +\n        "<" +\n        from.name() +\n        ">" +\n        ":" +\n        msg\n    );\n\n    if (msg.self()) {\n      return; // skip self\n    }\n\n    /**\n     * `dong` will be the magic(toggle) word:\n     *  bot will quit current room by herself.\n     */\n    if (/^dong$/i.test(text)) {\n      if (room) {\n        await room.say(\n          "You said dong in the room, I will quit by myself!",\n          from\n        );\n        await room.quit();\n      } else {\n        await from.say(\n          \'Nothing to do. If you say "dong" in a room, I will quit from the room.\'\n        );\n      }\n      return;\n    }\n\n    /**\n     * `ding` will be the magic(toggle) word:\n     *  1. say ding first time, will got a room invitation\n     *  2. say ding in room, will be removed out\n     */\n    if (/^ding$/i.test(text)) {\n      /**\n       *  in-room message\n       */\n      if (room) {\n        if (/^ding/i.test(await room.topic())) {\n          /**\n           * move contact out of room\n           */\n          await getOutRoom(from, room);\n        }\n\n        /**\n         * peer to peer message\n         */\n      } else {\n        /**\n         * find room name start with "ding"\n         */\n        try {\n          const dingRoom = await this.Room.find({ topic: /^ding/i });\n          if (dingRoom) {\n            /**\n             * room found\n             */\n            log.info(\n              "Bot",\n              \'onMessage: got dingRoom: "%s"\',\n              await dingRoom.topic()\n            );\n\n            if (await dingRoom.has(from)) {\n              /**\n               * speaker is already in room\n               */\n              const topic = await dingRoom.topic();\n              log.info("Bot", "onMessage: sender has already in dingRoom");\n              await dingRoom.say(\n                `I found you have joined in room "${topic}"!`,\n                from\n              );\n              await from.say(\n                `no need to ding again, because you are already in room: "${topic}"`\n              );\n              // sendMessage({\n              //   content: \'no need to ding again, because you are already in ding room\'\n              //   , to: sender\n              // })\n            } else {\n              /**\n               * put speaker into room\n               */\n              log.info(\n                "Bot",\n                \'onMessage: add sender("%s") to dingRoom("%s")\',\n                from.name(),\n                dingRoom.topic()\n              );\n              await from.say("ok, I will put you in ding room!");\n              await putInRoom(from, dingRoom);\n            }\n          } else {\n            /**\n             * room not found\n             */\n            log.info("Bot", "onMessage: dingRoom not found, try to create one");\n            /**\n             * create the ding room\n             */\n            const newRoom = await createDingRoom(from);\n            console.log("createDingRoom id:", newRoom.id);\n            /**\n             * listen events from ding room\n             */\n            await manageDingRoom();\n          }\n        } catch (e) {\n          log.error(e);\n        }\n      }\n    }\n  })\n')),(0,a.yg)("p",null,"Now, finally for starting the bot"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"bot.start()\n  .catch((e) => console.error(e));\n")),(0,a.yg)("h3",{id:"4-running-the-bot"},"4. Running the bot"),(0,a.yg)("p",null,"To run the bot, you have to export/set environment variables with the type of puppet you want to use."),(0,a.yg)(r.A,{groupId:"operating-systems",defaultValue:"linux",values:[{label:"Linux",value:"linux"},{label:"macOS",value:"mac"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},(0,a.yg)(i.A,{value:"linux",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"export WECHATY_LOG=verbose\nexport WECHATY_PUPPET=wechaty-puppet-wechat\n"))),(0,a.yg)(i.A,{value:"mac",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"export WECHATY_LOG=verbose\nexport WECHATY_PUPPET=wechaty-puppet-wechat\n"))),(0,a.yg)(i.A,{value:"windows",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"set WECHATY_LOG=verbose\nset WECHATY_PUPPET=wechaty-puppet-wechat\n")))),(0,a.yg)("p",null,"Run the bot using the following command."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"npx ts-node room-bot.js\n")),(0,a.yg)("p",null,"Scan the generated QR code with ",(0,a.yg)("strong",{parentName:"p"},"Wechat")," app and you are ready to play with the bot."),(0,a.yg)("h2",{id:"references"},"References"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://github.com/wechaty/wechaty-getting-started"},"Wechaty Getting started Github repository"))))}d.isMDXComponent=!0}}]);