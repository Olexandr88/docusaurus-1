"use strict";(self.webpackChunkwechaty_docusaurus=self.webpackChunkwechaty_docusaurus||[]).push([[1336],{15680:(e,a,n)=>{n.d(a,{xA:()=>c,yg:()=>i});var l=n(96540);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);a&&(l=l.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,l)}return n}function r(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,l,t=function(e,a){if(null==e)return{};var n,l,t={},o=Object.keys(e);for(l=0;l<o.length;l++)n=o[l],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(l=0;l<o.length;l++)n=o[l],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var u=l.createContext({}),p=function(e){var a=l.useContext(u),n=a;return e&&(n="function"==typeof e?e(a):r(r({},a),e)),n},c=function(e){var a=p(e.components);return l.createElement(u.Provider,{value:a},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var a=e.children;return l.createElement(l.Fragment,{},a)}},y=l.forwardRef((function(e,a){var n=e.components,t=e.mdxType,o=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),y=t,i=m["".concat(u,".").concat(y)]||m[y]||g[y]||o;return n?l.createElement(i,r(r({ref:a},c),{},{components:n})):l.createElement(i,r({ref:a},c))}));function i(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var o=n.length,r=new Array(o);r[0]=y;var s={};for(var u in a)hasOwnProperty.call(a,u)&&(s[u]=a[u]);s.originalType=e,s[m]="string"==typeof e?e:t,r[1]=s;for(var p=2;p<o;p++)r[p]=n[p];return l.createElement.apply(null,r)}return l.createElement.apply(null,n)}y.displayName="MDXCreateElement"},19365:(e,a,n)=>{n.d(a,{A:()=>r});var l=n(96540),t=n(20053);const o={tabItem:"tabItem_Ymn6"};function r(e){let{children:a,hidden:n,className:r}=e;return l.createElement("div",{role:"tabpanel",className:(0,t.A)(o.tabItem,r),hidden:n},a)}},11470:(e,a,n)=>{n.d(a,{A:()=>f});var l=n(58168),t=n(96540),o=n(20053),r=n(23104),s=n(56347),u=n(57485),p=n(31682),c=n(89466);function m(e){return function(e){return t.Children.map(e,(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:a,label:n,attributes:l,default:t}}=e;return{value:a,label:n,attributes:l,default:t}}))}function g(e){const{values:a,children:n}=e;return(0,t.useMemo)((()=>{const e=a??m(n);return function(e){const a=(0,p.X)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,n])}function y(e){let{value:a,tabValues:n}=e;return n.some((e=>e.value===a))}function i(e){let{queryString:a=!1,groupId:n}=e;const l=(0,s.W6)(),o=function(e){let{queryString:a=!1,groupId:n}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:a,groupId:n});return[(0,u.aZ)(o),(0,t.useCallback)((e=>{if(!o)return;const a=new URLSearchParams(l.location.search);a.set(o,e),l.replace({...l.location,search:a.toString()})}),[o,l])]}function d(e){const{defaultValue:a,queryString:n=!1,groupId:l}=e,o=g(e),[r,s]=(0,t.useState)((()=>function(e){let{defaultValue:a,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!y({value:a,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const l=n.find((e=>e.default))??n[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:a,tabValues:o}))),[u,p]=i({queryString:n,groupId:l}),[m,d]=function(e){let{groupId:a}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(a),[l,o]=(0,c.Dv)(n);return[l,(0,t.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:l}),v=(()=>{const e=u??m;return y({value:e,tabValues:o})?e:null})();(0,t.useLayoutEffect)((()=>{v&&s(v)}),[v]);return{selectedValue:r,selectValue:(0,t.useCallback)((e=>{if(!y({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),p(e),d(e)}),[p,d,o]),tabValues:o}}var v=n(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function T(e){let{className:a,block:n,selectedValue:s,selectValue:u,tabValues:p}=e;const c=[],{blockElementScrollPositionUntilNextRender:m}=(0,r.a_)(),g=e=>{const a=e.currentTarget,n=c.indexOf(a),l=p[n].value;l!==s&&(m(a),u(l))},y=e=>{let a=null;switch(e.key){case"Enter":g(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;a=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;a=c[n]??c[c.length-1];break}}a?.focus()};return t.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":n},a)},p.map((e=>{let{value:a,label:n,attributes:r}=e;return t.createElement("li",(0,l.A)({role:"tab",tabIndex:s===a?0:-1,"aria-selected":s===a,key:a,ref:e=>c.push(e),onKeyDown:y,onClick:g},r,{className:(0,o.A)("tabs__item",b.tabItem,r?.className,{"tabs__item--active":s===a})}),n??a)})))}function h(e){let{lazy:a,children:n,selectedValue:l}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(a){const e=o.find((e=>e.props.value===l));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return t.createElement("div",{className:"margin-top--md"},o.map(((e,a)=>(0,t.cloneElement)(e,{key:a,hidden:e.props.value!==l}))))}function N(e){const a=d(e);return t.createElement("div",{className:(0,o.A)("tabs-container",b.tabList)},t.createElement(T,(0,l.A)({},e,a)),t.createElement(h,(0,l.A)({},e,a)))}function f(e){const a=(0,v.A)();return t.createElement(N,(0,l.A)({key:String(a)},e))}},78466:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>u,default:()=>i,frontMatter:()=>s,metadata:()=>p,toc:()=>m});var l=n(58168),t=(n(96540),n(15680)),o=n(11470),r=n(19365);const s={title:"Listen to events"},u=void 0,p={unversionedId:"howto/degraded/degraded-event",id:"howto/degraded/degraded-event",title:"Listen to events",description:"The Wechaty Events are all the same acrossing Polyglot Wechaty programs!",source:"@site/docs/howto/degraded/degraded-event.md",sourceDirName:"howto/degraded",slug:"/howto/degraded/degraded-event",permalink:"/zh/docs/howto/degraded/degraded-event",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/howto/degraded/degraded-event.md",tags:[],version:"current",lastUpdatedBy:"Abhishek Jaiswal",lastUpdatedAt:1634707553,formattedLastUpdatedAt:"2021\u5e7410\u670820\u65e5",frontMatter:{title:"Listen to events"}},c={},m=[{value:"Basic Events",id:"basic-events",level:2},{value:"<code>scan</code> Event: QR code",id:"scan-event-qr-code",level:3},{value:"<code>login</code> Event: bot contact",id:"login-event-bot-contact",level:3},{value:"<code>logout</code> Event",id:"logout-event",level:3},{value:"<code>message</code> Event",id:"message-event",level:3},{value:"<code>friendship</code> Event: friend requests",id:"friendship-event-friend-requests",level:3},{value:"Room Events",id:"room-events",level:2},{value:"<code>room-topic</code> Event: messages",id:"room-topic-event-messages",level:3},{value:"<code>room-invite</code> Event: messages",id:"room-invite-event-messages",level:3},{value:"<code>room-join</code> Event: messages",id:"room-join-event-messages",level:3},{value:"<code>room-leave</code> Event: messages",id:"room-leave-event-messages",level:3},{value:"System events",id:"system-events",level:2},{value:"<code>ready</code> Event",id:"ready-event",level:3},{value:"<code>heartbeat</code> Event: messages",id:"heartbeat-event-messages",level:3},{value:"<code>error</code> Event",id:"error-event",level:3}],g={toc:m},y="wrapper";function i(e){let{components:a,...n}=e;return(0,t.yg)(y,(0,l.A)({},g,n,{components:a,mdxType:"MDXLayout"}),(0,t.yg)("admonition",{type:"tip"},(0,t.yg)("p",{parentName:"admonition"},"The Wechaty Events are all the same acrossing Polyglot Wechaty programs!")),(0,t.yg)("h2",{id:"basic-events"},"Basic Events"),(0,t.yg)("h3",{id:"scan-event-qr-code"},(0,t.yg)("inlineCode",{parentName:"h3"},"scan")," Event: QR code"),(0,t.yg)("p",null,"TODO: introducing ",(0,t.yg)("inlineCode",{parentName:"p"},"scan")," event"),(0,t.yg)(o.A,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,t.yg)(r.A,{value:"ts",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-ts"},"import { ScanStatus } from 'wechaty'\n\nasync function onScan (\n  qrcode: undefined | string,\n  status: ScanStatus,\n) {\n  console.info('Scan QR Code to login, status:', status, ScanStatus[status])\n  console.info('https://wechaty.js.org/qrcode/' + encodeURIComponent(qrcode))\n}\n\nbot.on('scan', onScan)\nawait bot.start()\n"))),(0,t.yg)(r.A,{value:"js",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-ts"},"const { ScanStatus } = require('wechaty')\n\nasync function onScan (\n  qrcode,\n  status,\n) {\n  console.info('Scan QR Code to login, status:', status, ScanStatus[status])\n  console.info('https://wechaty.js.org/qrcode/' + encodeURIComponent(qrcode))\n}\n\nbot.on('scan', onScan)\nawait bot.start()\n"))),(0,t.yg)(r.A,{value:"py",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty, ScanStatus\nfrom typing import Optional\nimport asyncio\n\n# method one\ndef on_scan (qrcode, status):\n    print('Scan QR Code to login: {}\\n'.format(staus))\n    print('https://wechaty.js.org/qrcode/{}'.format(qrcode))\n\nbot = Wechaty()\nbot.on('scan', on_scan)\nasyncio.run(bot.start())\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_scan(self, qr_code: str, status: ScanStatus, data: Optional[str]):\n        \"\"\"listen scan event\"\"\"\n        print('Scan QR Code to login: {}\\n'.format(staus))\n        print('https://wechaty.js.org/qrcode/{}'.format(qrcode))\n\nasyncio.run(MyBot().start())\n"))),(0,t.yg)(r.A,{value:"go",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"java",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"php",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"scala",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"csharp",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"rust",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,t.yg)("h3",{id:"login-event-bot-contact"},(0,t.yg)("inlineCode",{parentName:"h3"},"login")," Event: bot contact"),(0,t.yg)("p",null,"TODO: introducing ",(0,t.yg)("inlineCode",{parentName:"p"},"login")," event"),(0,t.yg)(o.A,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,t.yg)(r.A,{value:"ts",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-ts"},"import { Contact } from 'wechaty'\n\nfunction onLogin (bot: Contact) {\n  console.info('Bot logged in:', bot)\n}\n\nbot.on('login', onLogin)\nawait bot.start()\n"))),(0,t.yg)(r.A,{value:"js",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"function onLogin (bot) {\n  console.info('Bot logged in:', bot)\n}\n\nbot.on('login', onLogin)\nawait bot.start()\n"))),(0,t.yg)(r.A,{value:"py",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty, Contact\nfrom typing import Optional\nimport asyncio\n\n# method one\ndef on_login (contact: Contact):\n  print(f'User {contact} logged in\\n')\n\nbot.on('login', on_login)\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_login(self, contact: Contact):\n        print(f'User {contact} logged in\\n')\n\nasyncio.run(MyBot().start())\n"))),(0,t.yg)(r.A,{value:"go",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"java",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"php",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"scala",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"csharp",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"rust",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,t.yg)("h3",{id:"logout-event"},(0,t.yg)("inlineCode",{parentName:"h3"},"logout")," Event"),(0,t.yg)("p",null,"TODO: introducing ",(0,t.yg)("inlineCode",{parentName:"p"},"logout")," event"),(0,t.yg)(o.A,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,t.yg)(r.A,{value:"ts",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-ts"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"js",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"py",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty, Contact\nimport asyncio\n\n# method one\nasync def on_logout(contact: Contact):\n    print(f'User <{contact}> logout')\n\nbot = MyBot()\nbot.on('logout', on_logout)\nasyncio.run(bot.start())\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_logout(self, contact: Contact):\n        print(f'User <{contact}> logout')\n\nasync def start():\n    await MyBot().start()\n\nasyncio.run(start())\n"))),(0,t.yg)(r.A,{value:"go",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"java",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"php",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"scala",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"csharp",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"rust",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,t.yg)("h3",{id:"message-event"},(0,t.yg)("inlineCode",{parentName:"h3"},"message")," Event"),(0,t.yg)("p",null,"TODO: introducing ",(0,t.yg)("inlineCode",{parentName:"p"},"message")," event"),(0,t.yg)(o.A,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,t.yg)(r.A,{value:"ts",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-ts"},"import { Message } from 'wechaty'\n\nfunction onMessage (message: Message) {\n  console.info('New message:', message)\n}\n\nbot.on('message', onMessage)\nawait bot.start()\n"))),(0,t.yg)(r.A,{value:"js",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"function onMessage (message) {\n  console.info('New message:', message)\n}\n\nbot.on('message', onMessage)\nawait bot.start()\n"))),(0,t.yg)(r.A,{value:"py",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty, Message\nimport asyncio\n\n# method one\nasync def on_message(msg: Message):\n    print(f'receive message <{msg}>')\n\nbot = MyBot()\nbot.on('message', on_message)\nasyncio.run(bot.start())\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_message(self, msg: Message):\n        print(f'receive message <{msg}>')\n\nasyncio.run(MyBot().start())\n"))),(0,t.yg)(r.A,{value:"go",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"java",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"php",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"scala",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"csharp",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"rust",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,t.yg)("h3",{id:"friendship-event-friend-requests"},(0,t.yg)("inlineCode",{parentName:"h3"},"friendship")," Event: friend requests"),(0,t.yg)("p",null,"TODO: introducing ",(0,t.yg)("inlineCode",{parentName:"p"},"friendship")," event"),(0,t.yg)(o.A,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,t.yg)(r.A,{value:"ts",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-ts"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"js",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"py",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty, Friendship\nimport asyncio\n\n# method one\nasync def on_friendship(friendship: Friendship):\n    print(f'receive friendship<{friendship}> event')\n\nbot = MyBot()\nbot.on('friendship', on_friendship)\nasyncio.run(bot.start())\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_friendship(self, friendship: Friendship):\n        print(f'receive friendship<{friendship}> event')\n\nasyncio.run(MyBot().start())\n"))),(0,t.yg)(r.A,{value:"go",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"java",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"php",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"scala",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"csharp",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"rust",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,t.yg)("h2",{id:"room-events"},"Room Events"),(0,t.yg)("h3",{id:"room-topic-event-messages"},(0,t.yg)("inlineCode",{parentName:"h3"},"room-topic")," Event: messages"),(0,t.yg)("p",null,"TODO: introducing ",(0,t.yg)("inlineCode",{parentName:"p"},"room-topic")," event"),(0,t.yg)(o.A,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,t.yg)(r.A,{value:"ts",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-ts"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"js",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"py",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty, Room, Contact\nfrom datetime import datetime\nimport asyncio\n\n# method one\nasync def on_room_topic(room: Room, new_topic: str, old_topic: str, changer: Contact, date: datetime):\n    print(f'receive room topic changed event <from<{new_topic}> to <{old_topic}>> from room<{room}> ')\n\nbot = MyBot()\nbot.on('room-topic', on_room_topic)\nasyncio.run(bot.start())\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_room_topic(self, room: Room, new_topic: str, old_topic: str, changer: Contact, date: datetime):\n        print(f'receive room topic changed event <from<{new_topic}> to <{old_topic}>> from room<{room}> ')\n\nasyncio.run(MyBot().start())\n"))),(0,t.yg)(r.A,{value:"go",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"java",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"php",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"scala",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"csharp",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"rust",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,t.yg)("h3",{id:"room-invite-event-messages"},(0,t.yg)("inlineCode",{parentName:"h3"},"room-invite")," Event: messages"),(0,t.yg)("p",null,"TODO: introducing ",(0,t.yg)("inlineCode",{parentName:"p"},"room-invite")," event"),(0,t.yg)(o.A,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,t.yg)(r.A,{value:"ts",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-ts"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"js",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"py",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty, RoomInvitation\nimport asyncio\n\n\n# method one\nasync def on_room_invite(room_invitation: RoomInvitation):\n    print(f'receive room invitation<{room_invitation}> event')\n\nbot = MyBot()\nbot.on('room-invite', on_room_invite)\nasyncio.run(bot.start())\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_room_invite(self, room_invitation: RoomInvitation):\n        print(f'receive room invitation<{room_invitation}> event')\n\nasyncio.run(MyBot().start())\n"))),(0,t.yg)(r.A,{value:"go",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"java",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"php",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"scala",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"csharp",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"rust",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,t.yg)("h3",{id:"room-join-event-messages"},(0,t.yg)("inlineCode",{parentName:"h3"},"room-join")," Event: messages"),(0,t.yg)("p",null,"TODO: introducing ",(0,t.yg)("inlineCode",{parentName:"p"},"room-join")," event"),(0,t.yg)(o.A,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,t.yg)(r.A,{value:"ts",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-ts"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"js",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"py",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty, Contact, Room\nfrom typing import List\nfrom datetime import datetime\nimport asyncio\n\n# method one\nasync def on_room_join(room: Room, invitees: List[Contact], inviter: Contact, date: datetime):\n    print(f'receive room join event from Room<{room}>')\n\nbot = Wechaty()\nbot.on('room-join', on_room_join)\nasyncio.run(bot.start())\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_room_join(self, room: Room, invitees: List[Contact], inviter: Contact, date: datetime):\n        print(f'receive room join event from Room<{room}>')\n\nasyncio.run(MyBot().start())\n"))),(0,t.yg)(r.A,{value:"go",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"java",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"php",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"scala",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"csharp",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"rust",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,t.yg)("h3",{id:"room-leave-event-messages"},(0,t.yg)("inlineCode",{parentName:"h3"},"room-leave")," Event: messages"),(0,t.yg)("p",null,"TODO: introducing ",(0,t.yg)("inlineCode",{parentName:"p"},"room-leave")," event"),(0,t.yg)(o.A,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,t.yg)(r.A,{value:"ts",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-ts"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"js",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"py",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty, Contact, Room\nfrom typing import List\nfrom datetime import datetime\nimport asyncio\n\n# method one\nasync def on_room_leave(room: Room, leavers: List[Contact], remover: Contact, date: datetime):\n    print(f'receive room leave event from Room<{room}>')\n\nbot = Wechaty()\nbot.on('room-leave', on_room_leave)\nasyncio.run(bot.start())\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_room_leave(self, room: Room, leavers: List[Contact], remover: Contact, date: datetime):\n        print(f'receive room leave event from Room<{room}>')\n\nasyncio.run(MyBot().start())\n"))),(0,t.yg)(r.A,{value:"go",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"java",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"php",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"scala",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"csharp",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"rust",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,t.yg)("h2",{id:"system-events"},"System events"),(0,t.yg)("h3",{id:"ready-event"},(0,t.yg)("inlineCode",{parentName:"h3"},"ready")," Event"),(0,t.yg)("p",null,"TODO: introducing ",(0,t.yg)("inlineCode",{parentName:"p"},"ready")," event"),(0,t.yg)(o.A,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,t.yg)(r.A,{value:"ts",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-ts"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"js",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"py",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-py"},'from wechaty import Wechaty\nfrom wechaty_puppet import EventReadyPayload\nimport asyncio\n\n# method one\nasync def on_ready(payload: EventReadyPayload):\n    """Any initialization work can be put in here\n\n    Args:\n        payload (EventReadyPayload): ready data\n    """\n    print(f\'receive ready event<{payload}>\')\n\nbot = Wechaty()\nbot.on(\'ready\', on_ready)\nasyncio.run(bot.start())\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_ready(self, payload: EventReadyPayload):\n        """Any initialization work can be put in here\n\n        Args:\n            payload (EventReadyPayload): ready data\n        """\n        print(f\'receive ready event<{payload}>\')\n        \nasyncio.run(MyBot().start())\n'))),(0,t.yg)(r.A,{value:"go",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"java",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"php",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"scala",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"csharp",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"rust",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,t.yg)("h3",{id:"heartbeat-event-messages"},(0,t.yg)("inlineCode",{parentName:"h3"},"heartbeat")," Event: messages"),(0,t.yg)("p",null,"TODO: introducing ",(0,t.yg)("inlineCode",{parentName:"p"},"heartbeat")," event"),(0,t.yg)(o.A,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,t.yg)(r.A,{value:"ts",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-ts"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"js",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"py",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty\nfrom wechaty_puppet import EventHeartbeatPayload\nimport asyncio\n\n# method one\nasync def on_heartbeat(payload: EventHeartbeatPayload):\n    print(f'receive heartbeat event from server <{payload}>')\n\nbot = Wechaty()\nbot.on('heartbeat', on_heartbeat)\nasyncio.run(bot.start())\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_heartbeat(self, payload: EventHeartbeatPayload):\n        print(f'receive heartbeat event from server <{payload}>')\n        \nasyncio.run(MyBot().start())\n"))),(0,t.yg)(r.A,{value:"go",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"java",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"php",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"scala",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"csharp",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"rust",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,t.yg)("h3",{id:"error-event"},(0,t.yg)("inlineCode",{parentName:"h3"},"error")," Event"),(0,t.yg)("p",null,"TODO: introducing ",(0,t.yg)("inlineCode",{parentName:"p"},"error")," event"),(0,t.yg)(o.A,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,t.yg)(r.A,{value:"ts",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-ts"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"js",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"py",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty\nfrom wechaty_puppet import EventErrorPayload\nimport asyncio\n\n# method one\nasync def on_error(payload: EventErrorPayload):\n    print(f'receive error event<{payload}> from sever')\n\nbot = Wechaty()\nbot.on('error', on_error)\nasyncio.run(bot.start())\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_error(self, payload: EventErrorPayload):\n        print(f'receive error event<{payload}> from sever')\n        \nasyncio.run(MyBot().start())\n"))),(0,t.yg)(r.A,{value:"go",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"java",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"php",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"scala",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"csharp",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,t.yg)(r.A,{value:"rust",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))))}i.isMDXComponent=!0}}]);