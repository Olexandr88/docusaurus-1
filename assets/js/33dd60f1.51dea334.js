"use strict";(self.webpackChunkwechaty_docusaurus=self.webpackChunkwechaty_docusaurus||[]).push([[9184,78,3330,1173,2992,5867,122,8011,2761,6256,3160,4445],{15680:(t,e,a)=>{a.d(e,{xA:()=>i,yg:()=>y});var o=a(96540);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function s(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,o)}return a}function r(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?s(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function l(t,e){if(null==t)return{};var a,o,n=function(t,e){if(null==t)return{};var a,o,n={},s=Object.keys(t);for(o=0;o<s.length;o++)a=s[o],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(o=0;o<s.length;o++)a=s[o],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var c=o.createContext({}),p=function(t){var e=o.useContext(c),a=e;return t&&(a="function"==typeof t?t(e):r(r({},e),t)),a},i=function(t){var e=p(t.components);return o.createElement(c.Provider,{value:e},t.children)},u="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},g=o.forwardRef((function(t,e){var a=t.components,n=t.mdxType,s=t.originalType,c=t.parentName,i=l(t,["components","mdxType","originalType","parentName"]),u=p(a),g=n,y=u["".concat(c,".").concat(g)]||u[g]||d[g]||s;return a?o.createElement(y,r(r({ref:e},i),{},{components:a})):o.createElement(y,r({ref:e},i))}));function y(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var s=a.length,r=new Array(s);r[0]=g;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=t,l[u]="string"==typeof t?t:n,r[1]=l;for(var p=2;p<s;p++)r[p]=a[p];return o.createElement.apply(null,r)}return o.createElement.apply(null,a)}g.displayName="MDXCreateElement"},19365:(t,e,a)=>{a.d(e,{A:()=>r});var o=a(96540),n=a(20053);const s={tabItem:"tabItem_Ymn6"};function r(t){let{children:e,hidden:a,className:r}=t;return o.createElement("div",{role:"tabpanel",className:(0,n.A)(s.tabItem,r),hidden:a},e)}},11470:(t,e,a)=>{a.d(e,{A:()=>N});var o=a(58168),n=a(96540),s=a(20053),r=a(23104),l=a(56347),c=a(57485),p=a(31682),i=a(89466);function u(t){return function(t){return n.Children.map(t,(t=>{if(!t||(0,n.isValidElement)(t)&&function(t){const{props:e}=t;return!!e&&"object"==typeof e&&"value"in e}(t))return t;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof t.type?t.type:t.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(t).map((t=>{let{props:{value:e,label:a,attributes:o,default:n}}=t;return{value:e,label:a,attributes:o,default:n}}))}function d(t){const{values:e,children:a}=t;return(0,n.useMemo)((()=>{const t=e??u(a);return function(t){const e=(0,p.X)(t,((t,e)=>t.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((t=>t.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(t),t}),[e,a])}function g(t){let{value:e,tabValues:a}=t;return a.some((t=>t.value===e))}function y(t){let{queryString:e=!1,groupId:a}=t;const o=(0,l.W6)(),s=function(t){let{queryString:e=!1,groupId:a}=t;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:e,groupId:a});return[(0,c.aZ)(s),(0,n.useCallback)((t=>{if(!s)return;const e=new URLSearchParams(o.location.search);e.set(s,t),o.replace({...o.location,search:e.toString()})}),[s,o])]}function h(t){const{defaultValue:e,queryString:a=!1,groupId:o}=t,s=d(t),[r,l]=(0,n.useState)((()=>function(t){let{defaultValue:e,tabValues:a}=t;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!g({value:e,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${a.map((t=>t.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const o=a.find((t=>t.default))??a[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:e,tabValues:s}))),[c,p]=y({queryString:a,groupId:o}),[u,h]=function(t){let{groupId:e}=t;const a=function(t){return t?`docusaurus.tab.${t}`:null}(e),[o,s]=(0,i.Dv)(a);return[o,(0,n.useCallback)((t=>{a&&s.set(t)}),[a,s])]}({groupId:o}),m=(()=>{const t=c??u;return g({value:t,tabValues:s})?t:null})();(0,n.useLayoutEffect)((()=>{m&&l(m)}),[m]);return{selectedValue:r,selectValue:(0,n.useCallback)((t=>{if(!g({value:t,tabValues:s}))throw new Error(`Can't select invalid tab value=${t}`);l(t),p(t),h(t)}),[p,h,s]),tabValues:s}}var m=a(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(t){let{className:e,block:a,selectedValue:l,selectValue:c,tabValues:p}=t;const i=[],{blockElementScrollPositionUntilNextRender:u}=(0,r.a_)(),d=t=>{const e=t.currentTarget,a=i.indexOf(e),o=p[a].value;o!==l&&(u(e),c(o))},g=t=>{let e=null;switch(t.key){case"Enter":d(t);break;case"ArrowRight":{const a=i.indexOf(t.currentTarget)+1;e=i[a]??i[0];break}case"ArrowLeft":{const a=i.indexOf(t.currentTarget)-1;e=i[a]??i[i.length-1];break}}e?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":a},e)},p.map((t=>{let{value:e,label:a,attributes:r}=t;return n.createElement("li",(0,o.A)({role:"tab",tabIndex:l===e?0:-1,"aria-selected":l===e,key:e,ref:t=>i.push(t),onKeyDown:g,onClick:d},r,{className:(0,s.A)("tabs__item",b.tabItem,r?.className,{"tabs__item--active":l===e})}),a??e)})))}function w(t){let{lazy:e,children:a,selectedValue:o}=t;const s=(Array.isArray(a)?a:[a]).filter(Boolean);if(e){const t=s.find((t=>t.props.value===o));return t?(0,n.cloneElement)(t,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},s.map(((t,e)=>(0,n.cloneElement)(t,{key:e,hidden:t.props.value!==o}))))}function v(t){const e=h(t);return n.createElement("div",{className:(0,s.A)("tabs-container",b.tabList)},n.createElement(f,(0,o.A)({},t,e)),n.createElement(w,(0,o.A)({},t,e)))}function N(t){const e=(0,m.A)();return n.createElement(v,(0,o.A)({key:String(e)},t))}},12554:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>c,default:()=>y,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var o=a(58168),n=(a(96540),a(15680)),s=a(11470),r=a(19365);a(41311);const l={title:"Starter Bot"},c=void 0,p={unversionedId:"examples/basic/starter-bot",id:"examples/basic/starter-bot",title:"Starter Bot",description:"Powered by Wechaty",source:"@site/docs/examples/basic/starter-bot.mdx",sourceDirName:"examples/basic",slug:"/examples/basic/starter-bot",permalink:"/docs/examples/basic/starter-bot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/examples/basic/starter-bot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan",lastUpdatedAt:1631608278,formattedLastUpdatedAt:"Sep 14, 2021",frontMatter:{title:"Starter Bot"},sidebar:"docs",previous:{title:"Ducks Proposal Style",permalink:"/docs/using-redux-with-wechaty/ducks-proposal"},next:{title:"World's Shortest Chatbot",permalink:"/docs/examples/basic/the-worlds-shortest-chatbot-code-in-6-lines"}},i={},u=[{value:"Requirements",id:"requirements",level:2},{value:"Getting started",id:"getting-started",level:2},{value:"Building the bot",id:"building-the-bot",level:2},{value:"1. Initialize project",id:"1-initialize-project",level:3},{value:"2. Install dependencies",id:"2-install-dependencies",level:3},{value:"3. Write code for bot",id:"3-write-code-for-bot",level:3},{value:"Running the bot",id:"running-the-bot",level:2},{value:"References",id:"references",level:2}],d={toc:u},g="wrapper";function y(t){let{components:e,...a}=t;return(0,n.yg)(g,(0,o.A)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,n.yg)("p",null,(0,n.yg)("a",{parentName:"p",href:"https://github.com/Wechaty/wechaty"},(0,n.yg)("img",{parentName:"a",src:"https://img.shields.io/badge/Powered%20By-Wechaty-brightgreen.svg",alt:"Powered by Wechaty"})),"\n",(0,n.yg)("a",{parentName:"p",href:"https://www.typescriptlang.org/"},(0,n.yg)("img",{parentName:"a",src:"https://img.shields.io/badge/%3C%2F%3E-TypeScript-blue.svg",alt:"TypeScript"}))),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Starter bot")," is the most basic bot that you can build using Wechaty. You can use this bot as a template for creating an advanced version of the bot by doing further customizations."),(0,n.yg)("p",null,"In this tutorial, you will get step-by-step instructions for creating the Starter bot."),(0,n.yg)("h2",{id:"requirements"},"Requirements"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("a",{parentName:"li",href:"https://nodejs.org/en/download"},"Node.js")," v16+"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/wechaty/wechaty"},"Wechaty")," v0.40+")),(0,n.yg)("h2",{id:"getting-started"},"Getting started"),(0,n.yg)("p",null,"You should have ",(0,n.yg)("inlineCode",{parentName:"p"},"Node.js")," installed on your system. If you do not have ",(0,n.yg)("inlineCode",{parentName:"p"},"Node.js")," installed (or have a version below 12), then you need to install the latest version of ",(0,n.yg)("inlineCode",{parentName:"p"},"Node.js")," by following the links below:"),(0,n.yg)("admonition",{title:"Node.js installation docs",type:"note"},(0,n.yg)("ul",{parentName:"admonition"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://nodejs.org/en/download/package-manager/#windows"},"Windows")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions"},"Linux","(","Debian/Ubuntu",")")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://nodejs.org/en/download/package-manager/#macos"},"macOS"))),(0,n.yg)("blockquote",{parentName:"admonition"},(0,n.yg)("p",{parentName:"blockquote"},"Installation guide for ",(0,n.yg)("inlineCode",{parentName:"p"},"Node.js")," on other platforms can be found ",(0,n.yg)("a",{parentName:"p",href:"https://nodejs.org/en/download/package-manager/"},"here"),"."))),(0,n.yg)("h2",{id:"building-the-bot"},"Building the bot"),(0,n.yg)("p",null,"Let's get started with building the Starter bot using Wechaty."),(0,n.yg)("h3",{id:"1-initialize-project"},"1. Initialize project"),(0,n.yg)("p",null,"Create a new folder called ",(0,n.yg)("inlineCode",{parentName:"p"},"starter-bot")," and move into the directory:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sh"},"mkdir starter-bot\ncd starter-bot\n")),(0,n.yg)("p",null,"Use the following command to initialize a NPM project:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sh"},"npm init -y\n")),(0,n.yg)("p",null,"This will generate a ",(0,n.yg)("inlineCode",{parentName:"p"},"package.json")," file containing these:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "starter-bot",\n  "version": "1.0.0",\n  "description": "",\n  "main": "index.js",\n  "scripts": {\n    "test": "echo \\"Error: no test specified\\" && exit 1"\n  },\n  "keywords": [],\n  "author": "",\n  "license": "ISC"\n}\n')),(0,n.yg)("h3",{id:"2-install-dependencies"},"2. Install dependencies"),(0,n.yg)("p",null,"You will need the ",(0,n.yg)("inlineCode",{parentName:"p"},"wechaty")," NPM package for building this bot & ",(0,n.yg)("inlineCode",{parentName:"p"},"ts-node")," for running the TypeScript file of the bot. Install them using the following commands:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sh"},"npm install wechaty\nnpm install ts-node\n")),(0,n.yg)("p",null,"You will also need to add dependencies for using any ",(0,n.yg)("a",{parentName:"p",href:"https://wechaty.js.org/docs/puppet-providers/"},"Wechaty Puppet")," which helps to integrate Wechaty with various ",(0,n.yg)("strong",{parentName:"p"},"instant messaging (IM) systems")," (such as WeChat, WhatsApp, and WeCom):"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("p",{parentName:"li"},"If you want to use ",(0,n.yg)("strong",{parentName:"p"},(0,n.yg)("a",{parentName:"strong",href:"https://www.whatsapp.com/"},"WhatsApp")),", install ",(0,n.yg)("inlineCode",{parentName:"p"},"wechaty-puppet-whatsapp"),":"),(0,n.yg)("pre",{parentName:"li"},(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"npm install wechaty-puppet-whatsapp\n"))),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("p",{parentName:"li"},"If you want to use ",(0,n.yg)("strong",{parentName:"p"},(0,n.yg)("a",{parentName:"strong",href:"https://www.wechat.com/"},"WeChat")),", you can try the following puppets:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},(0,n.yg)("strong",{parentName:"p"},"Web Protocol:")," Install ",(0,n.yg)("inlineCode",{parentName:"p"},"wechaty-puppet-wechat"),":"),(0,n.yg)("pre",{parentName:"li"},(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"npm install wechaty-puppet-wechat\n"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},(0,n.yg)("strong",{parentName:"p"},"iPad Protocol:")),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"padlocal: Install ",(0,n.yg)("inlineCode",{parentName:"p"},"wechaty-puppet-padlocal"),":"),(0,n.yg)("pre",{parentName:"li"},(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"npm install wechaty-puppet-padlocal\n")),(0,n.yg)("p",{parentName:"li"},"Then get a token like ",(0,n.yg)("inlineCode",{parentName:"p"},"puppet_padlocal_XXX"),", know more about puppet service padlocal ",(0,n.yg)("a",{parentName:"p",href:"http://wechaty.js.org/docs/puppet-services/padlocal"},"here"),".")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"paimon: Install ",(0,n.yg)("inlineCode",{parentName:"p"},"wechaty-puppet-service"),":"),(0,n.yg)("pre",{parentName:"li"},(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"npm install wechaty-puppet-service\n")),(0,n.yg)("p",{parentName:"li"},"Then get a token like ",(0,n.yg)("inlineCode",{parentName:"p"},"puppet_paimon_XXX"),", know more about puppet service paimon ",(0,n.yg)("a",{parentName:"p",href:"http://wechaty.js.org/docs/puppet-services/paimon"},"here"),".")))))),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("p",{parentName:"li"},"If you want to use ",(0,n.yg)("strong",{parentName:"p"},(0,n.yg)("a",{parentName:"strong",href:"https://work.weixin.qq.com/"},"WeCom")),", install ",(0,n.yg)("inlineCode",{parentName:"p"},"wechaty-puppet-service"),":"),(0,n.yg)("pre",{parentName:"li"},(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"npm install wechaty-puppet-service\n")),(0,n.yg)("p",{parentName:"li"},"Then get a token like ",(0,n.yg)("inlineCode",{parentName:"p"},"puppet_wxwork_XXXXX"),", more about puppet service wxwork ",(0,n.yg)("a",{parentName:"p",href:"https://wechaty.js.org/docs/puppet-services/wxwork/"},"here"),"."))),(0,n.yg)("blockquote",null,(0,n.yg)("p",{parentName:"blockquote"},"You can find more information about the puppets ",(0,n.yg)("a",{parentName:"p",href:"https://wechaty.js.org/docs/puppet-providers/"},"here"),".")),(0,n.yg)("h3",{id:"3-write-code-for-bot"},"3. Write code for bot"),(0,n.yg)("p",null,"Create a new file called ",(0,n.yg)("inlineCode",{parentName:"p"},"starter-bot.ts")," in the root project directory. Add the following to the file:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-ts"},"// Importing the Wechaty npm package\nimport { Wechaty } from 'wechaty'\n\n// Initializing the bot\nconst bot = new Wechaty({\n    name: 'starter-bot',\n})\n\n// Starting the bot\nbot\n.on('scan', (qrcode, status) => console.log(`Scan QR Code to login: ${status}\\nhttps://wechaty.js.org/qrcode/${encodeURIComponent(qrcode)}`))\n.on('login',            user => console.log(`User ${user} logged in`))\n.on('message',       message => console.log(`Message: ${message}`))\n.start()\n")),(0,n.yg)("h2",{id:"running-the-bot"},"Running the bot"),(0,n.yg)("p",null,"You have to ",(0,n.yg)("strong",{parentName:"p"},"export/set")," an environment variable with the type of puppet to use:"),(0,n.yg)(s.A,{groupId:"operating-systems",defaultValue:"linux",values:[{label:"Linux",value:"linux"},{label:"macOS",value:"mac"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},(0,n.yg)(r.A,{value:"linux",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},'export WECHATY_LOG=verbose\nexport WECHATY_PUPPET=wechaty-puppet-wechat\n\n# For using WhatsApp:\n# export WECHATY_PUPPET=wechaty-puppet-whatsapp\n\n# For using WeCom:\n# export WECHATY_PUPPET=wechaty-puppet-service\n# export WECHATY_PUPPET_SERVICE_TOKEN="puppet_wxwork_XXXXX"\n'))),(0,n.yg)(r.A,{value:"mac",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},'export WECHATY_LOG=verbose\nexport WECHATY_PUPPET=wechaty-puppet-wechat\n\n# For using WhatsApp:\n# export WECHATY_PUPPET=wechaty-puppet-whatsapp\n\n# For using WeCom:\n# export WECHATY_PUPPET=wechaty-puppet-service\n# export WECHATY_PUPPET_SERVICE_TOKEN="puppet_wxwork_XXXXX"\n'))),(0,n.yg)(r.A,{value:"windows",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},'set WECHATY_LOG=verbose\nset WECHATY_PUPPET=wechaty-puppet-wechat\n\n# For using WhatsApp:\n# set WECHATY_PUPPET=wechaty-puppet-whatsapp\n\n# For using WeCom:\n# set WECHATY_PUPPET=wechaty-puppet-service\n# set WECHATY_PUPPET_SERVICE_TOKEN="puppet_wxwork_XXXXX"\n')))),(0,n.yg)("blockquote",null,(0,n.yg)("p",{parentName:"blockquote"},"If you are using WeCom, you can get token from ",(0,n.yg)("a",{parentName:"p",href:"http://wechaty.js.org/docs/puppet-services/wxwork"},"puppet service wxwork"),".")),(0,n.yg)("p",null,"Run the bot using the following command:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sh"},"ts-node src/starter-bot.ts\n")),(0,n.yg)("h2",{id:"references"},"References"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"../../using-plugin-with-wechaty/overview"},"Wechaty plugins")," to integrate with the bot."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/wechaty/wechaty-getting-started"},"Wechaty Getting Started GitHub repository"))))}y.isMDXComponent=!0},79323:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var o=a(58168),n=(a(96540),a(15680));const s={},r=void 0,l={unversionedId:"polyglot/dotnet/transclusions/shortest-chatbot",id:"polyglot/dotnet/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/dotnet/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/dotnet/transclusions",slug:"/polyglot/dotnet/transclusions/shortest-chatbot",permalink:"/docs/polyglot/dotnet/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/dotnet/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616051830,formattedLastUpdatedAt:"Mar 18, 2021",frontMatter:{}},c={},p=[],i={toc:p},u="wrapper";function d(t){let{components:e,...a}=t;return(0,n.yg)(u,(0,o.A)({},i,a,{components:e,mdxType:"MDXLayout"}),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-csharp"},'var wechaty = new Wechaty(options, logger).onScan((qrcode, status) => {\n  Console.WriteLine($"Scan QR Code to login: {status} https://wechaty.js.org/qrcode/{(qrcode)}`");\n}).OnLogin( user => {\n  Console.WriteLine("User {user} logined");\n}).OnMessage( message => {\n  Console.WriteLine($"Message: {message}");\n}).Start();\n')))}d.isMDXComponent=!0},73399:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var o=a(58168),n=(a(96540),a(15680));const s={},r=void 0,l={unversionedId:"polyglot/go/transclusions/shortest-chatbot",id:"polyglot/go/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/go/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/go/transclusions",slug:"/polyglot/go/transclusions/shortest-chatbot",permalink:"/docs/polyglot/go/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/go/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616051830,formattedLastUpdatedAt:"Mar 18, 2021",frontMatter:{}},c={},p=[],i={toc:p},u="wrapper";function d(t){let{components:e,...a}=t;return(0,n.yg)(u,(0,o.A)({},i,a,{components:e,mdxType:"MDXLayout"}),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n "fmt"\n\n  "github.com/wechaty/go-wechaty/wechaty"\n)\n\nfunc main() {\n  _ = wechaty.NewWechaty().\n    OnScan(func(qrCode, status string) {\n      fmt.Printf("Scan QR Code to login: %s\\nhttps://wechaty.js.org/qrcode/%s\\n", status, qrCode)\n    }).\n    OnLogin(func(user string) { fmt.Printf("User %s logged in\\n", user) }).\n    OnMessage(func(message string) { fmt.Printf("Message: %s\\n", message) }).\n    Start()\n}\n')))}d.isMDXComponent=!0},60537:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var o=a(58168),n=(a(96540),a(15680));const s={},r=void 0,l={unversionedId:"polyglot/java/transclusions/shortest-chatbot",id:"polyglot/java/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/java/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/java/transclusions",slug:"/polyglot/java/transclusions/shortest-chatbot",permalink:"/docs/polyglot/java/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/java/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616051830,formattedLastUpdatedAt:"Mar 18, 2021",frontMatter:{}},c={},p=[],i={toc:p},u="wrapper";function d(t){let{components:e,...a}=t;return(0,n.yg)(u,(0,o.A)({},i,a,{components:e,mdxType:"MDXLayout"}),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-java"},'package io.github.wechaty;\n\nclass Bot{\n  public static void main(String args[]){\n    Wechaty bot = Wechaty.instance()\n      .onScan((qrcode, statusScanStatus, data) -> System.out.println(QrcodeUtils.getQr(qrcode)))\n      .onLogin(user -> System.out.println("User logged in :" + user))\n      .onMessage(message -> System.out.println("Message:" + message))\n      .start(true);\n  }\n}\n')))}d.isMDXComponent=!0},71665:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var o=a(58168),n=(a(96540),a(15680));const s={},r=void 0,l={unversionedId:"polyglot/openapi/transclusions/shortest-chatbot",id:"polyglot/openapi/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/openapi/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/openapi/transclusions",slug:"/polyglot/openapi/transclusions/shortest-chatbot",permalink:"/docs/polyglot/openapi/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/openapi/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616054254,formattedLastUpdatedAt:"Mar 18, 2021",frontMatter:{}},c={},p=[],i={toc:p},u="wrapper";function d(t){let{components:e,...a}=t;return(0,n.yg)(u,(0,o.A)({},i,a,{components:e,mdxType:"MDXLayout"}),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sh"},"# To be add: curl ...\n")))}d.isMDXComponent=!0},1409:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var o=a(58168),n=(a(96540),a(15680));const s={},r=void 0,l={unversionedId:"polyglot/php/transclusions/shortest-chatbot",id:"polyglot/php/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/php/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/php/transclusions",slug:"/polyglot/php/transclusions/shortest-chatbot",permalink:"/docs/polyglot/php/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/php/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616051830,formattedLastUpdatedAt:"Mar 18, 2021",frontMatter:{}},c={},p=[],i={toc:p},u="wrapper";function d(t){let{components:e,...a}=t;return(0,n.yg)(u,(0,o.A)({},i,a,{components:e,mdxType:"MDXLayout"}),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-php"},'$wechaty = \\IO\\Github\\Wechaty\\Wechaty::getInstance($token, $endPoint);\n$wechaty->onScan(function($qrcode, $status, $data) {\n    $qr = \\IO\\Github\\Wechaty\\Util\\QrcodeUtils::getQr($qrcode);\n    echo "$qr\\n\\nOnline Image: https://wechaty.js.org/qrcode/$qrcode\\n";\n})->onLogin(function(\\IO\\Github\\Wechaty\\User\\ContactSelf $user) {\n})->onMessage(function(\\IO\\Github\\Wechaty\\User\\Message $message) {\n    $message->say("hello from PHP7.4");\n})->start();\n')))}d.isMDXComponent=!0},58571:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var o=a(58168),n=(a(96540),a(15680));const s={},r=void 0,l={unversionedId:"polyglot/python/transclusions/shortest-chatbot",id:"polyglot/python/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/python/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/python/transclusions",slug:"/polyglot/python/transclusions/shortest-chatbot",permalink:"/docs/polyglot/python/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/python/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616051830,formattedLastUpdatedAt:"Mar 18, 2021",frontMatter:{}},c={},p=[],i={toc:p},u="wrapper";function d(t){let{components:e,...a}=t;return(0,n.yg)(u,(0,o.A)({},i,a,{components:e,mdxType:"MDXLayout"}),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty\nimport asyncio\n\nasync def main():\n    bot = Wechaty()\n    bot.on('scan', lambda status, qrcode, data: print('Scan QR Code to login: {}\\nhttps://wechaty.js.org/qrcode/{}'.format(status, qrcode)))\n    bot.on('login', lambda user: print('User {} logged in'.format(user)))\n    bot.on('message', lambda message: print('Message: {}'.format(message)))\n    await bot.start()\n\nasyncio.run(main())\n")))}d.isMDXComponent=!0},27463:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var o=a(58168),n=(a(96540),a(15680));const s={},r=void 0,l={unversionedId:"polyglot/rust/transclusions/shortest-chatbot",id:"polyglot/rust/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/rust/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/rust/transclusions",slug:"/polyglot/rust/transclusions/shortest-chatbot",permalink:"/docs/polyglot/rust/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/rust/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616051830,formattedLastUpdatedAt:"Mar 18, 2021",frontMatter:{}},c={},p=[],i={toc:p},u="wrapper";function d(t){let{components:e,...a}=t;return(0,n.yg)(u,(0,o.A)({},i,a,{components:e,mdxType:"MDXLayout"}),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-rust"},"let bot = Wechaty::new(PuppetService::new(options).await.unwrap());\n\nbot.on_scan(handle_scan)\n    .on_login(handle_login)\n    .on_logout(handle_logout)\n    .on_message(handle_message)\n    .start()\n    .await;\n")))}d.isMDXComponent=!0},92911:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var o=a(58168),n=(a(96540),a(15680));const s={},r=void 0,l={unversionedId:"polyglot/scala/transclusions/shortest-chatbot",id:"polyglot/scala/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/scala/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/scala/transclusions",slug:"/polyglot/scala/transclusions/shortest-chatbot",permalink:"/docs/polyglot/scala/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/scala/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616051830,formattedLastUpdatedAt:"Mar 18, 2021",frontMatter:{}},c={},p=[],i={toc:p},u="wrapper";function d(t){let{components:e,...a}=t;return(0,n.yg)(u,(0,o.A)({},i,a,{components:e,mdxType:"MDXLayout"}),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-scala"},'package wechaty\n\nobject DingDongBot {\n  def main(args: Array[String]): Unit = {\n    Wechaty.instance()\n      .onScan(payload     => { println("Scan QR Code to login: %s\\nhttps://wechaty.js.org/qrcode/%s\\n".format(payload.status, payload.qrcode)) })\n      .onLogin(payload    => { println("User %s logged in\\n".format(payload.id)) })\n      .onMessage(message  => { println(message) })\n      .start()\n    Thread.currentThread().join()\n  }\n}\n')))}d.isMDXComponent=!0},41311:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>v,contentTitle:()=>f,default:()=>C,frontMatter:()=>b,metadata:()=>w,toc:()=>N});var o=a(58168),n=(a(96540),a(15680)),s=a(11470),r=a(19365),l=a(69566),c=a(71665),p=a(90532),i=a(58571),u=a(73399),d=a(60537),g=a(1409),y=a(92911),h=a(79323),m=a(27463);const b={},f=void 0,w={unversionedId:"polyglot/transclusions/shortest-chatbots",id:"polyglot/transclusions/shortest-chatbots",title:"shortest-chatbots",description:"<Tabs",source:"@site/docs/polyglot/transclusions/shortest-chatbots.mdx",sourceDirName:"polyglot/transclusions",slug:"/polyglot/transclusions/shortest-chatbots",permalink:"/docs/polyglot/transclusions/shortest-chatbots",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/transclusions/shortest-chatbots.mdx",tags:[],version:"current",lastUpdatedBy:"shwetal",lastUpdatedAt:1630752945,formattedLastUpdatedAt:"Sep 4, 2021",frontMatter:{}},v={},N=[],T={toc:N},x="wrapper";function C(t){let{components:e,...a}=t;return(0,n.yg)(x,(0,o.A)({},T,a,{components:e,mdxType:"MDXLayout"}),(0,n.yg)(s.A,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"},{label:"OpenAPI",value:"openapi"}],mdxType:"Tabs"},(0,n.yg)(r.A,{value:"ts",mdxType:"TabItem"},(0,n.yg)(l.default,{mdxType:"ShortestChatbotTypeScript"})),(0,n.yg)(r.A,{value:"js",mdxType:"TabItem"},(0,n.yg)(p.default,{mdxType:"ShortestChatbotJavaScript"})),(0,n.yg)(r.A,{value:"py",mdxType:"TabItem"},(0,n.yg)(i.default,{mdxType:"ShortestChatbotPython"})),(0,n.yg)(r.A,{value:"go",mdxType:"TabItem"},(0,n.yg)(u.default,{mdxType:"ShortestChatbotGo"})),(0,n.yg)(r.A,{value:"java",mdxType:"TabItem"},(0,n.yg)(d.default,{mdxType:"ShortestChatbotJava"})),(0,n.yg)(r.A,{value:"php",mdxType:"TabItem"},(0,n.yg)(g.default,{mdxType:"ShortestChatbotPhp"})),(0,n.yg)(r.A,{value:"scala",mdxType:"TabItem"},(0,n.yg)(y.default,{mdxType:"ShortestChatbotScala"})),(0,n.yg)(r.A,{value:"csharp",mdxType:"TabItem"},(0,n.yg)(h.default,{mdxType:"ShortestChatbotDotnet"})),(0,n.yg)(r.A,{value:"rust",mdxType:"TabItem"},(0,n.yg)(m.default,{mdxType:"ShortestChatbotRust"})),(0,n.yg)(r.A,{value:"openapi",mdxType:"TabItem"},(0,n.yg)(c.default,{mdxType:"ShortestChatbotOpenApi"}))))}C.isMDXComponent=!0},90532:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var o=a(58168),n=(a(96540),a(15680));const s={},r=void 0,l={unversionedId:"polyglot/typescript/transclusions/shortest-chatbot-js",id:"polyglot/typescript/transclusions/shortest-chatbot-js",title:"shortest-chatbot-js",description:"",source:"@site/docs/polyglot/typescript/transclusions/shortest-chatbot-js.mdx",sourceDirName:"polyglot/typescript/transclusions",slug:"/polyglot/typescript/transclusions/shortest-chatbot-js",permalink:"/docs/polyglot/typescript/transclusions/shortest-chatbot-js",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/typescript/transclusions/shortest-chatbot-js.mdx",tags:[],version:"current",lastUpdatedBy:"fennghuang",lastUpdatedAt:1682493184,formattedLastUpdatedAt:"Apr 26, 2023",frontMatter:{}},c={},p=[],i={toc:p},u="wrapper";function d(t){let{components:e,...a}=t;return(0,n.yg)(u,(0,o.A)({},i,a,{components:e,mdxType:"MDXLayout"}),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"import { Wechaty } from 'wechaty'\n\nasync function main () {\n  const bot = new Wechaty()\n  bot\n    .on('scan', (qrcode, status) => console.log(`Scan QR Code to login: ${status}\\nhttps://wechaty.js.org/qrcode/${encodeURIComponent(qrcode)}`))\n    .on('login',            user => console.log(`User ${user} logged in`))\n    .on('message',       message => console.log(`Message: ${message}`))\n  await bot.start()\n}\n\nmain()\n  .catch(console.error)\n")))}d.isMDXComponent=!0},69566:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var o=a(58168),n=(a(96540),a(15680));const s={},r=void 0,l={unversionedId:"polyglot/typescript/transclusions/shortest-chatbot",id:"polyglot/typescript/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/typescript/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/typescript/transclusions",slug:"/polyglot/typescript/transclusions/shortest-chatbot",permalink:"/docs/polyglot/typescript/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/typescript/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Xiaohan Li",lastUpdatedAt:1619007923,formattedLastUpdatedAt:"Apr 21, 2021",frontMatter:{}},c={},p=[],i={toc:p},u="wrapper";function d(t){let{components:e,...a}=t;return(0,n.yg)(u,(0,o.A)({},i,a,{components:e,mdxType:"MDXLayout"}),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-ts"},"import { Wechaty } from 'wechaty'\n\nasync function main () {\n  const bot = new Wechaty()\n  bot\n    .on('scan', (qrcode, status) => console.log(`Scan QR Code to login: ${status}\\nhttps://wechaty.js.org/qrcode/${encodeURIComponent(qrcode)}`))\n    .on('login',            user => console.log(`User ${user} logged in`))\n    .on('message',       message => console.log(`Message: ${message}`))\n  await bot.start()\n}\n\nmain()\n  .catch(console.error)\n")))}d.isMDXComponent=!0}}]);